{
   "endpoints":[
      {
         "name":"Context",
         "path":"/1.0/context",
         "methods":[
            {
               "MethodName":"getContext",
               "Synopsis":"Retrieve context information for the location. ",
               "HTTPMethod":"GET",
               "URI":"/1.0/context/:lat,:lon.json",
               "RequiresOAuth":"Y",
               "parameters":[
                  {
                     "Name":"lat",
                     "Required":"Y",
                     "Default":"",
                     "Type":"coorindate",
                     "Description":"Latitudinal coordinate"
                  },
                  {
                     "Name":"lon",
                     "Required":"Y",
                     "Default":"",
                     "Type":"coordinate",
                     "Description":"Longitudinal coordinate"
                  }
               ]
            },
            {
               "MethodName":"getContextFromAddress",
               "Synopsis":"Retrieve context information for an address",
               "HTTPMethod":"GET",
               "URI":"/1.0/context/address.json",
               "RequiresOAuth":"Y",
               "parameters":[
                  {
                     "Name":"address",
                     "Required":"Y",
                     "Default":"",
                     "Type":"string",
                     "Description":"Full street address, ZIP code required"
                  }
               ]
            },
            {
               "MethodName":"getContextFromIP",
               "Synopsis":"Retrieve context information for the location of an IP address.",
               "HTTPMethod":"GET",
               "URI":"/1.0/context/:ip.json",
               "RequiresOAuth":"Y",
               "parameters":[
                  {
                     "Name":"ip",
                     "Required":"Y",
                     "Default":"",
                     "Type":"IPv4 address",
                     "Description":"Dot-decimal notation IPv4 address (e.g. 4.2.2.2)"
                  }
               ]
            },
            {
               "MethodName":"getContextFromIP (yours)",
               "Synopsis":"Retrieve context information for the location of your IP address.",
               "HTTPMethod":"GET",
               "URI":"/1.0/context/ip.json",
               "RequiresOAuth":"Y",
               "parameters":[

               ]
            }
         ]
      },
      {
         "name":"Places",
         "methods":[
            {
               "MethodName":"search",
               "Synopsis":"Search for places near a point (lat/lon) by name or category.",
               "HTTPMethod":"GET",
               "URI":"/1.0/places/:lat,:lon.json",
               "RequiresOAuth":"Y",
               "parameters":[
                  {
                     "Name":"lat",
                     "Required":"Y",
                     "Default":"",
                     "Type":"coordinate",
                     "Description":"Latitudinal coordinate"
                  },
                  {
                     "Name":"lon",
                     "Required":"Y",
                     "Type":"coordinate",
                     "Type":"Longitudinal coordinate"
                  },
                  {
                     "Name":"q",
                     "Required":"N",
                     "Default":"",
                     "Type":"string",
                     "Description":"A search term. For example, q=Starbucks would return all places matching the name Starbucks."
                  },
                  {
                     "Name":"category",
                     "Required":"N",
                     "Default":"",
                     "Type":"string",
                     "Description":"Filter by an exact classifier (types, categories, subcategories, tags)"
                  },
                  {
                     "Name":"radius",
                     "Required":"N",
                     "Default":"",
                     "Type":"int",
                     "Description":"Search by radius in kilometers. Default and max val is 25km."
                  },
                  {
                     "Name":"num",
                     "Required":"N",
                     "Default":"",
                     "Type":"int",
                     "Description":"The amount of features to return. Default is 25."
                  }
               ]
            },
            {
               "MethodName":"searchFromAddress",
               "Synopsis":"Search for places near an address by name or category.",
               "HTTPMethod":"GET",
               "URI":"/1.0/places/address.json",
               "RequiresOAuth":"Y",
               "parameters":[
                  {
                     "Name":"address",
                     "Required":"Y",
                     "Default":"",
                     "Type":"string",
                     "Description":"Full street address, ZIP code required"
                  },
                  {
                     "Name":"q",
                     "Required":"N",
                     "Default":"",
                     "Type":"string",
                     "Description":"A search term. For example, q=Starbucks would return all places matching the name Starbucks."
                  },
                  {
                     "Name":"category",
                     "Required":"N",
                     "Default":"",
                     "Type":"string",
                     "Description":"Filter by an exact classifier (types, categories, subcategories, tags)"
                  },
                  {
                     "Name":"radius",
                     "Required":"N",
                     "Default":"",
                     "Type":"int",
                     "Description":"Search by radius in kilometers. Default and max val is 25."
                  },
                  {
                     "Name":"num",
                     "Required":"N",
                     "Default":"",
                     "Type":"int",
                     "Description":"The amount of features to return. Default is 25."
                  }
               ]
            },
            {
               "MethodName":"searchFromIP",
               "Synopsis":"Search for places near an IP location.",
               "HTTPMethod":"GET",
               "URI":"/1.0/places/:ip.json",
               "RequiresOAuth":"Y",
               "parameters":[
                  {
                     "Name":"ip",
                     "Required":"Y",
                     "Default":"",
                     "Type":"IPv4 address",
                     "Description":"Dot-decimal notation IPv4 address (e.g. 4.2.2.2)"

                  },
                  {
                     "Name":"q",
                     "Required":"N",
                     "Default":"",
                     "Type":"string",
                     "Description":"A search term. For example, q=Starbucks would return all places matching the name Starbucks."
                  },
                  {
                     "Name":"category",
                     "Required":"N",
                     "Default":"",
                     "Type":"string",
                     "Description":"Filter by an exact classifier (types, categories, subcategories, tags)"
                  },
                  {
                     "Name":"radius",
                     "Required":"N",
                     "Default":"",
                     "Type":"int",
                     "Description":"Search by radius in kilometers. Default and max val is 25km."
                  },
                  {
                     "Name":"num",
                     "Required":"N",
                     "Default":"",
                     "Type":"int",
                     "Description":"The amount of features to return. Default is 25."
                  }
               ]
            },
            {
               "MethodName":"searchFromIP (yours)",
               "Synopsis":"Search for places near your IP location.",
               "HTTPMethod":"GET",
               "URI":"/1.0/places/ip.json",
               "RequiresOAuth":"Y",
               "parameters":[
                  {
                     "Name":"q",
                     "Required":"N",
                     "Default":"",
                     "Type":"string",
                     "Description":"A search term. For example, q=Starbucks would return all places matching the name Starbucks."
                  },
                  {
                     "Name":"category",
                     "Required":"N",
                     "Default":"",
                     "Type":"string",
                     "Description":"Filter by an exact classifier (types, categories, subcategories, tags)"
                  },
                  {
                     "Name":"radius",
                     "Required":"N",
                     "Default":"",
                     "Type":"int",
                     "Description":"Search by radius in kilometers. Default and max val is 25km."
                  },
                  {
                     "Name":"num",
                     "Required":"N",
                     "Default":"",
                     "Type":"int",
                     "Description":"The amount of features to return. Default is 25."
                  }
               ]
            },
            {
               "MethodName":"Create/Update Place",
               "Synopsis":"Create or update a place feature in SimpleGeo Places.",
               "HTTPMethod":"POST",
               "URI":"/1.0/places",
               "RequiresOAuth":"Y",
               "read-only":true,
               "parameters":[
                  {
                     "Name":"Place",
                     "Required":"Y",
                     "Default":"",
                     "Type":"GeoJSON",
                     "Description":"Each new feature gets a unique, consistent handle; if you insert the same record twice, the more recent insert overwrites the previous one.\n When you add a feature, it is visible only to your application until approved for general use. To keep your features private to your application, include \"private\": true in the GeoJSON properties.\n You can include your own ID for a feature by including \"record_id\": <id> in the GeoJSON properties. SimpleGeo won't track your IDs (unless you ask us to)."
                  }
               ]
            }
         ]
      },
      {
         "name":"Features",
         "methods":[
            {
               "MethodName":"getFeatureCategories",
               "Synopsis":"Get a list of all the possible Feature categories.",
               "HTTPMethod":"GET",
               "URI":"/1.0/features/categories.json",
               "RequiresOAuth":"N",
               "parameters":[

               ]
            },
            {
               "MethodName":"getFeature",
               "Synopsis":"Retrieves a feature and details about the features. Requires a handle. Returns a GeoJSON Feature.",
               "HTTPMethod":"GET",
               "URI":"/1.0/features/:handle.json",
               "RequiresOAuth":"N",
               "parameters":[
                  {
                     "Name":"handle",
                     "Required":"Y",
                     "Default":"",
                     "Type":"string",
                     "Description":"handle (SimpleGeo Handle)"
                  }
               ]
            },
            {
               "MethodName":"Annotations",
               "Synopsis":"Annotations are structured metadata for any feature. They maybe be public or private.",
               "Description":"Annotations are a way to add structured metadata to any feature in either SimpleGeo Context or SimpleGeo Places. Annotations may be public or private. They are comprised of a top-level type, an attribute key, and a value.",
               "HTTPMethod":"GET",
               "URI":"/1.0/features/:handle/annotations.json",
               "RequiresOAuth":"N",
               "parameters":[
                  {
                     "Name":"handle",
                     "Required":"Y",
                     "Default":"",
                     "Type":"string",
                     "Description":"handle (SimpleGeo Handle)"
                  }
               ]
            },
            {
               "MethodName":"Annotations",
               "Synopsis":"Add annotations. Annotations are structured metadata for any feature. They maybe be public or private.",
               "Description":"Annotations are a way to add structured metadata to any feature in either SimpleGeo Context or SimpleGeo Places. Annotations may be public or private. They are comprised of a top-level type, an attribute key, and a value.",
               "HTTPMethod":"POST",
               "URI":"/1.0/features/:handle/annotations.json",
               "RequiresOAuth":"N",
               "read-only":true,
               "parameters":[
                  {
                     "Name":"handle",
                     "Required":"Y",
                     "Default":"",
                     "Type":"string",
                     "Description":"handle (SimpleGeo Handle)"
                  }
               ]
            }
         ]
      }
   ]
}
